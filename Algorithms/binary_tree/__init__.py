# -*- coding: utf8 -*-

"""
1.种类
满二叉树，节点数量是 2**k - 1
完全二叉树，节点数量范围 1 ~ 2**k - 1
二叉搜索树，有序，左子树所有节点值小于根节点，右子树所有节点值大于根节点，查询复杂度 log(n)
平衡二叉搜索树，有序，且左右子树高度差绝对值不大于 1

2.存储方式
链表（常用） + 数组（i*2+1, i*2+2 是左右 child index）

3.遍历
深度优先 DFS（常用递归实现，前中后序遍历，递归往往通过栈实现） + 广度优先 BFS（常用迭代实现，层序遍历）
前序遍历，中左右
中序遍历，左中右
后序遍历，左右中
前中后序描述的是根节点的遍历位置

4.定义
根节点和左右子节点
"""


class TreeNode:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None
